(function (f) { $cache = {}; var a = { init: function () { return this.each(function () { var g = f(this); g.addClass("prettified"); if (g.is("input[type='text'],input[type='password']")) { e(g) } else { if (g.is("input[type='checkbox'],input[type='radio']")) { c(g) } else { if (g.is("input[type='submit'], input[type='button']")) { d(g) } else { if (g.is("select")) { b(g) } else { f.error("The type: " + g.get(0).tagName + " cannot be prettified.") } } } } }) }, reset: function () { return this.each(function () { var g = f(this); if (g.is("input[type='text'],input[type='password']")) { g.val("") } else { if (g.is("input[type='checkbox'],input[type='radio']")) { g.parent().removeClass("checked") } else { if (g.is("input[type='submit'], input[type='button']")) { g.parent().removeClass("focus") } else { if (g.is("select")) { g.get(0).selectedIndex = 0; g.parent().children(".selected").text(g.children(":selected").text()) } else { f.error("The type: " + g.get(0).tagName + " cannot be reset.") } } } } }) } }; f.fn.prettify = function (g) { if (a[g]) { return a[g].apply(this, Array.prototype.slice.call(arguments, 1)) } else { if (typeof g === "object" || !g) { return a.init.apply(this, arguments) } else { f.error("Method: " + g + "does not exist") } } }; function e(g) { g.attr("autocomplete", "off"); g.wrap('<span class="textfield ' + g.attr("class") + '"/>'); g.bind({ focus: function () { g.parent().addClass("focus") }, blur: function () { g.parent().removeClass("focus") } }) } function c(i) { var h = i.get(0).checked ? "checked" : ""; i.css("opacity", 0); i.wrap('<span class="' + i.attr("type") + " " + i.attr("class") + " " + h + '"/>'); var g = f("span." + i.attr("type") + ""); i.bind({ focus: function () { i.parent().addClass("focus") }, blur: function () { i.parent().removeClass("focus") }, change: function () { if (this.type === "radio") { f("input[name='" + i.attr("name") + "']").parent().removeClass("checked") } if (this.checked) { i.parent().addClass("checked") } else { i.parent().removeClass("checked") } } }) } function d(g) { if (g.attr("type") === "submit" && g.attr("class") === "nosubmit") { g.wrap('<span class="button"/>') } else { g.wrap('<span class="button submit"/>') } g.bind({ focus: function () { g.parent().addClass("focus") }, blur: function () { g.parent().removeClass("focus") }, mousedown: function () { g.parent().addClass("active") }, mouseup: function () { g.parent().removeClass("active") } }) } function b(i) { var h = i.children(":selected").text(); var g = f('<div class="combobox ' + i.attr("class") + '"><span class="selected">' + h + "</span></div>"); g.css("width", 230); i.replaceWith(g).appendTo(g); i.css("opacity", 0); i.bind({ focus: function () { i.parent().addClass("focus") }, blur: function () { i.parent().removeClass("focus") }, change: function () { i.parent().children(".selected").text(i.children(":selected").text()) }, options_added: function () { f(this).parent().children(".selected").text(f(this).children(":selected").text()) } }) } })(jQuery);